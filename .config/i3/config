# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# wallpaper
set $wallpaper /home/jakob/Pictures/wallhaven-dgvzvl.jpg

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 6

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# keyboard layout
exec --no-startup-id setxkbmap de

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

exec --no-startup-id redshift -l 48.52266:9.05222

exec_always --no-startup-id /usr/bin/light-locker

# start polybar on startup
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# wallpaper
# exec_always feh --bg-scale --no-xinerama $wallpaper
exec sh ~/.fehbg &

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# spotify controls
# Bind media keys to spotify play, stop, next, previous
bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym XF86AudioStop exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# working with multiple screens
# (run xrandr to set external screen)

# moving workspaces between screens
bindsym $mod+p move workspace to output right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
	bindsym h resize shrink width 10 px or 10 ppt
		bindsym j resize grow height 10 px or 10 ppt
		bindsym k resize shrink height 10 px or 10 ppt
		bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
		bindsym Left resize shrink width 10 px or 10 ppt
		bindsym Down resize grow height 10 px or 10 ppt
		bindsym Up resize shrink height 10 px or 10 ppt
		bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape or $mod+r
		bindsym Return mode "default"
		bindsym Escape mode "default"
		bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

##########################################
############# Customization ##############
##########################################

bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show 

# enable gaps
# inner for the margin between the border and the content of a window
# outer for the margin between the window and the screens edges / other windows
# adjust padding-bottom in polybar for spacing between bar and windows
gaps inner 5
gaps outer 2

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 2
        bindsym minus gaps inner current minus 2
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 2
        bindsym Shift+minus gaps inner all minus 2
        bindsym Shift+0     gaps inner all set 0
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 2
        bindsym minus gaps outer current minus 2
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 2
        bindsym Shift+minus gaps outer all minus 2
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# remove top bar
new_window 1pixel # uncomment to remove top bar

# border size
# default_border pixel 1

# hide borders 
hide_edge_borders smart

# start picom
exec picom --experimental-backends -b

#####################
### change colors ###
#####################

# set primary gruvbox colorscheme colors
set $bg #282828
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #458588
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021

# class                 border  backgr. text    indicator child_border
client.focused          $green $green $darkgray $purple #20b55b
client.focused_inactive $darkgray $darkgray $yellow $purple $darkgray
client.unfocused        $darkgray $darkgray $yellow $purple $darkgray
client.urgent           $red $red $white $red $red
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

#####################
### xset (speed)  ###
#####################

exec xset r rate 300 50

#####################
### lecture  flow ###
#####################

bindsym Mod4+l exec --no-startup-id python /usr/local/bin/university-setup-master/scripts/rofi-lectures.py
bindsym Mod4+c exec --no-startup-id python /usr/local/bin/university-setup-master/scripts/rofi-courses.py

#####################
###  workspaces   ###
#####################

set $zeiss-workspace [z]eiss [s]ingleToMulti [t]emplateApp [e]dge [m]qtt-explorer
bindsym $mod+o mode "$zeiss-workspace"

mode "$zeiss-workspace" {
	bindsym z exec kitty --working-directory ~/Zeiss/
	bindsym t exec kitty --working-directory ~/Zeiss/scaleit-app-template/DomainSoftware
	bindsym s exec kitty --working-directory ~/Zeiss/singleToMulti/
	
	bindsym m exec mqtt-explorer
	bindsym e exec microsoft-edge-dev

	# split in horizontal orientation
	bindsym Mod1+g split h

	# split in vertical orientation
	bindsym Mod1+v split v

	# change focus
	bindsym $mod+h focus left
	bindsym $mod+j focus down
	bindsym $mod+k focus up
	bindsym $mod+l focus right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right
	
	# move focused window
	bindsym $mod+Shift+h move left
	bindsym $mod+Shift+j move down
	bindsym $mod+Shift+k move up
	bindsym $mod+Shift+l move right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right

	bindsym Escape mode "default"
	bindsym Return mode "default"
}

#####################
###  shortcuts    ###
#####################

bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -5
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +5

# shortcuts for frequently used programs
bindsym Mod4+2 exec firefox 
# open firefox in workspace 2
assign [class="firefox"] $ws2

assign [class="MQTT-Explorer"] $ws9
assign [class="Microsoft-edge-dev"] $ws10

assign [class="Inkscape"] $ws5

# make urxvt always floating (for inkscape input)
for_window [class="URxvt"] floating enable

# take a screenshot of a screen region and copy it to a clipboard and save to screenshots dir
bindsym --release Shift+Print exec "/usr/local/bin/screencapture -s /home/jakob/Pictures/Screenshots/"
# take a screenshot of a screen region and copy it to a clipboard and save to notes dir
bindsym --release Control+Shift+Print exec "/usr/local/bin/screencapture -s /home/jakob/OneDrive/notes/JoplinNotesMarkdown/_resources/"

# take a screenshot of a whole window and copy it to a clipboard and save to screenshots dir
bindsym --release Print exec "/usr/local/bin/screencapture /home/jakob/Pictures/Screenshots/"
# take a screenshot of a whole window and copy it to a clipboard and save to notes dir
bindsym --release Control+Print exec "/usr/local/bin/screencapture /home/jakob/OneDrive/notes/JoplinNotesMarkdown/_resources/"

# keybinding for starting polydoro timer
bindsym $mod+t exec --no-startup-id python ~/.config/polybar/polydoro/polydoro.py
# keybinding for cancelling polydoro timer
bindsym $mod+Shift+t exec pkill -f polydoro.py > /tmp/polydoro.output

# keybinding to start rofi bluetooth manager
bindsym $mod+b exec --no-startup-id rofi-bluetooth

# keybinding to start rofi wifi manager
bindsym $mod+Shift+w exec --no-startup-id /usr/local/bin/rofi-wifi-menu/rofi-wifi-menu.sh

# keybinding to open current courses url
# bindsym Mod4+u exec "yq .url ~/current-course/info.yaml | xargs firefox"
